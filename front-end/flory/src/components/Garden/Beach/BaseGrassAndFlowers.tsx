/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/beach_map.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, OrthographicCamera } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import CameraAndLight from "./CameraAndLight";
import FlowersWrapper from "../../Flowers/FlowersWrapper";

type GLTFResult = GLTF & {
  nodes: {
    Sand: THREE.Mesh;
    Pier: THREE.Mesh;
    Circle: THREE.Mesh;
    Cylinder: THREE.Mesh;
    Plane003: THREE.Mesh;
    Plane004_1: THREE.Mesh;
    Plane013: THREE.Mesh;
    Plane014_1: THREE.Mesh;
    Plane015_1: THREE.Mesh;
    Plane016: THREE.Mesh;
    Plane017: THREE.Mesh;
    Plane018: THREE.Mesh;
    Plane019: THREE.Mesh;
    Plane020: THREE.Mesh;
    Plane021: THREE.Mesh;
    Plane022: THREE.Mesh;
    Plane034: THREE.Mesh;
    Ground: THREE.Mesh;
    Sand001: THREE.Mesh;
    Sand002: THREE.Mesh;
    Sand003: THREE.Mesh;
    Sand004: THREE.Mesh;
    Torch: THREE.Mesh;
    Circle003_1: THREE.Mesh;
    Torch001: THREE.Mesh;
    Circle005: THREE.Mesh;
    Water: THREE.Mesh;
    Plane: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube004: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube006: THREE.Mesh;
    Plane029: THREE.Mesh;
    Roundcube: THREE.Mesh;
    Roundcube001: THREE.Mesh;
    Roundcube002: THREE.Mesh;
    Roundcube003: THREE.Mesh;
    Roundcube004: THREE.Mesh;
    Circle001: THREE.Mesh;
    Cube007: THREE.Mesh;
    Cylinder001: THREE.Mesh;
    Plane030: THREE.Mesh;
  };
  materials: {
    Sand: THREE.MeshStandardMaterial;
    Wood: THREE.MeshStandardMaterial;
    Red: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
    Ground: THREE.MeshStandardMaterial;
    ark: THREE.MeshStandardMaterial;
    Water: THREE.MeshPhysicalMaterial;
    Rocks: THREE.MeshStandardMaterial;
    ["Sand.001"]: THREE.MeshStandardMaterial;
  };
};

export function BaseGrass(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    `${process.env.PUBLIC_URL}/models/beach_map.glb`
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Sand.geometry}
        material={materials.Sand}
        receiveShadow={true}
        userData={{ ground: true }}
      />
    </group>
  );
}

function BaseGrassAndFlowers({
  page,
  otherUserId,
}: {
  page?: string;
  otherUserId?: number;
}) {
  return (
    <>
      <BaseGrass />
      <FlowersWrapper page={page} otherUserId={otherUserId} />
    </>
  );
}

export default BaseGrassAndFlowers;
